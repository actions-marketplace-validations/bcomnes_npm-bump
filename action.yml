name: 'npm bump'
description: 'npm i && npm test && npm version {major,minor,patch} && npm publish as an action.'
branding:
  icon: box
  color: blue
inputs:
  git_email:
    description: 'The email address used to create the version commit with.'
    required: true
  git_username:
    description: 'The name to use for the version commit. e.g. github.actor'
    required: true
  newversion:
    description: 'The version bump type to perform (e.g. major, minor, path). See npm version docs for more info.  Pass this as an interactive variable.'
    required: true
  push_version_commit:
    description: 'Run `git push --follow-tags` after running `npm version`.  Enable this if you don't configure a prepublishOnly hook that pushes git commits.'
    required: false
    default: false
  skip_test:
    description: 'Skip npm test step.  Usually a bad idea, but sometimes not.'
    required: false
    default: false
  publish_cmd:
    description: 'The command to run after npm version.  Useful if you are just using npm to version a package, but not publish to npm (like an action).'
    required: false
    default: 'npm publish'
  github_token:
    description: 'Pass the secrets.GITHUB_TOKEN to enable gh-release capabilities.'
    required: false
  npm_token:
    description: 'An npm token scoped for publishing.  Used to create the release.'
    required: false
runs:
  using: 'composite'
  steps:
    - run: git config --global user.email "${{ inputs.git_email }}"
    - run: git config --global user.name "${{ inputs.git_username }}"
    - run: npm i
    - run: npm test
    - run: npm version ${{ inputs.newversion }}
    - run: git push --follow-tags
      if:  ${{ inputs.push_version_commit }}
    - run: ${{ inputs.publish_cmd }}
      env:
        GH_RELEASE_GITHUB_API_TOKEN: ${{ inputs.github_token }}
        NODE_AUTH_TOKEN: ${{ inputs.npm_token }}
